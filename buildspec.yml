version: 0.2

phases:
  pre_build:
    commands:
      - echo "ðŸš€ Starting Lux Gaming CI/CD Pipeline"
      - echo "Installing required tools..."
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x kubectl
      - mv kubectl /usr/local/bin/
      - curl -LO https://github.com/aws/aws-cli/releases/latest/download/awscli-exe-linux-x86_64.zip
      - unzip awscli-exe-linux-x86_64.zip
      - ./aws/install
      - aws --version
      - kubectl version --client
      - echo "Configuring AWS CLI..."
      - aws configure set default.region $AWS_DEFAULT_REGION
      - echo "Getting EKS cluster credentials..."
      - aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_DEFAULT_REGION
      - echo "âœ… Pre-build phase completed"

  build:
    commands:
      - echo "ðŸ”¨ Building Docker images..."
      - echo "Building Frontend..."
      - cd lux-frontend
      - docker build -t lux-gaming-frontend:$CODEBUILD_RESOLVED_SOURCE_VERSION .
      - cd ../lugx-backend/services/game
      - docker build -t lux-gaming-game:$CODEBUILD_RESOLVED_SOURCE_VERSION .
      - cd ../order
      - docker build -t lux-gaming-order:$CODEBUILD_RESOLVED_SOURCE_VERSION .
      - cd ../user
      - docker build -t lux-gaming-user:$CODEBUILD_RESOLVED_SOURCE_VERSION .
      - cd ../analytics
      - docker build -t lux-gaming-analytics:$CODEBUILD_RESOLVED_SOURCE_VERSION .
      - cd ../api-gateway
      - docker build -t lux-gaming-api-gateway:$CODEBUILD_RESOLVED_SOURCE_VERSION .
      - cd ../../..
      - echo "âœ… Build phase completed"

  post_build:
    commands:
      - echo "ðŸ§ª Running integration tests..."
      - echo "Testing Game Service..."
      - kubectl apply -f k8s/namespace.yaml
      - kubectl apply -f k8s/configmap.yaml
      - kubectl apply -f k8s/secret.yaml
      - kubectl apply -f k8s/game-deployment.yaml
      - kubectl apply -f k8s/game-service.yaml
      - kubectl apply -f k8s/user-deployment.yaml
      - kubectl apply -f k8s/user-service.yaml
      - kubectl apply -f k8s/order-deployment.yaml
      - kubectl apply -f k8s/order-service.yaml
      - kubectl apply -f k8s/frontend-deployment.yaml
      - kubectl apply -f k8s/frontend-service.yaml
      - kubectl apply -f k8s/ingress.yaml
      - echo "Waiting for services to be ready..."
      - kubectl wait --for=condition=available --timeout=300s deployment/game-deployment -n lux-gaming
      - kubectl wait --for=condition=available --timeout=300s deployment/user-deployment -n lux-gaming
      - kubectl wait --for=condition=available --timeout=300s deployment/order-deployment -n lux-gaming
      - kubectl wait --for=condition=available --timeout=300s deployment/frontend-deployment -n lux-gaming
      - echo "Running health checks..."
      - sleep 30
      - echo "Testing service endpoints..."
      - kubectl get pods -n lux-gaming
      - kubectl get services -n lux-gaming
      - echo "âœ… Post-build phase completed"

artifacts:
  files:
    - '**/*'
  discard-paths: no 